
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/mouse.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  / {
    keymap {
      compatible = "zmk,keymap";

    layer0 {
          bindings = <
          &kp J &kp C &kp Y &kp F &kp K &kp Z &kp L &kp COMMA &kp U &kp Q &mt LEFT_SHIFT R &lt 5 S &lt 1 T &lt 3 H &kp D &kp B &lt 4 N &lt 2 O &lt 6 I &mt LEFT_SHIFT M &none &mt LEFT_CONTROL V &mt LEFT_ALT G &kp P &none &kp X &kp W &mt LEFT_ALT DOT &mt LEFT_CONTROL SEMICOLON &none &kp E &kp BACKSPACE &lt 7 SPACE &kp A
          >;
        };

layer1 {
          bindings = <
          &trans &trans &trans &trans &trans &trans &mkp MB1 &msc SCRL_UP &mkp MB2 &trans &trans &mkp MB2 &none &mkp MB1 &trans &trans &mmv MOVE_LEFT &mmv  MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &trans &trans &trans &trans &trans &trans &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_RIGHT &trans &trans &trans &trans &trans
          >;
        };
layer2 {
          bindings = <
          &trans &trans &kp PAGE_UP &trans &trans &trans &trans &trans &trans &trans &kp LEFT &kp UP &kp DOWN &kp RIGHT &trans &trans &kp LEFT_GUI &none &kp LC(LEFT_ALT)   &trans &kp LC(LEFT_SHIFT) &trans &kp HOME &kp PAGE_DOWN &kp END &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
          >; 
        };


layer3 {
          bindings = <
          &trans &trans &trans &trans &trans &trans  &kp UNDER  &kp PIPE &kp SINGLE_QUOTE &trans  &kp CARET &kp ASTRK &kp AMPS &none &trans &kp HASH &kp TILDE2 &kp SLASH &kp DQT  &kp DOLLAR &trans &trans &trans &trans &trans &trans &kp MINUS &kp BACKSLASH &kp GRAVE &trans  &trans &trans &trans  &trans          >;
        };

layer4 {
          bindings = <
          &trans &kp COLON &kp LT &kp GT &kp SEMICOLON &trans &trans &trans &trans &trans &kp LBRC &kp RBRC &kp LPAR &kp RPAR &kp AT &trans &none &kp EQUAL &kp PLUS &kp PERCENT &trans &kp EXCL &kp LEFT_BRACKET &kp RIGHT_BRACKET &trans &trans &trans &trans &trans &trans &kp C_VOLUME_DOWN &trans &trans &kp C_VOLUME_UP
          >;
        };

layer5 {
          bindings = <
          &trans &trans &trans &trans &trans &trans &kp F7 &kp F8 &kp F9 &kp F10 &trans &none &kp LC(LEFT_ALT) &trans &trans &trans &kp F4 &kp F5 &kp F6 &kp F11 &trans &trans &trans &trans &trans &trans &kp F1 &kp F2 &kp F3 &kp F12 &trans &trans &trans &trans
          >;
        };
/*
layer6 {
          bindings = <
          &kp KP_SLASH &kp N7 &kp N8 &kp N9 &kp KP_PLUS &trans &trans &trans &trans &trans &kp N0 &kp N1 &kp N2 &kp N3 &kp KP_MINUS &trans &trans &trans &none &trans &kp KP_ASTERISK &kp N4 &kp N5 &kp N6 &kp KP_EQUAL &trans &trans &trans &trans &trans &trans &trans &trans &trans
          >;
        };

layer7 {
          bindings = <
          &trans &trans COLN&kp ESCAPE &trans &trans &trans &trans &trans &kp DELETE &trans PERC&kp SLASH &kp ENTER &trans [[DF(1)&kp LEFT_GUI &trans &trans &trans &trans &trans &trans EXLM&trans [[DF(0)&trans [[RALT_T(KC_COMM)[[RCTL_T(KC_DOT)[[QK_BOOT&trans &kp TAB &none &trans
          >;
        };
*/

    };
  };
  
